parameters:
- name: dev1_1Env
  displayName: DEV 1.1 environment
  type: boolean
  default: true

trigger:
- main

resources:
- repo: self

variables:
  buildDev1_1: ${{ eq(parameters.dev1_1Env, 'true') }}

stages:
- stage: version_1_1
  condition: eq(variables.buildDev1_1, 'True')
  displayName: Build CellTyping for DEV 1.1 environment
  jobs:
  - job: Build_CellTyping_for_Dev_1_1
    displayName: Build CellTyping for DEV 1.1
    pool:
      vmImage: ubuntu-latest
    variables:
      - group: smida-build-pipeline-variables
    steps:
    - task: ECRPullImage@1
      displayName: Pull NanoPipeline Build environment image from DEV 1.1 HUB ECR
      inputs:
        awsCredentials: 'tenanthub-dev-$(TENANT_AWS_CREDENTIALS)'
        regionName: '$(AWS_REGION)'
        repository: 'ecr-usw2-atmx-mt-cosmx_da_repo-dev-hub-smida-nanopipeline-build-environment'
        imageSource: 'imagetag'
        imageTag: 'latest'
    - task: Bash@3
      displayName: Run smida-nanopipeline-build-environment Docker Image
      inputs:
        targetType: 'inline'
        script: |
          docker run --rm -v "$(Build.SourcesDirectory)":"/source" $(TENANT_ACCOUNT_ID).dkr.ecr.$(AWS_REGION).amazonaws.com/ecr-usw2-atmx-mt-cosmx_da_repo-dev-hub-smida-nanopipeline-build-environment:latest
    - task: Bash@3
      displayName: Copy .tar.gz file as latest
      inputs:
        targetType: 'inline'
        script: |
          cp *.tar.gz smiCellTyping_latest.tar.gz
    - task: S3Upload@1
      displayName: Upload CellTyping .tar.gz files to S3 on DEV 1.1 HUB
      inputs:
        awsCredentials: 'tenanthub-dev-$(TENANT_AWS_CREDENTIALS)'
        regionName: '$(AWS_REGION)'
        bucketName: 's3-usw2-atmx-mt-smida-assets-global-bucket-dev-dev-hub-ah001'
        sourceFolder: '$(Build.SourcesDirectory)'
        globExpressions: '*.tar.gz'
        targetFolder: 'smida/assets/nanopipeline'