// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dnbinom_sparse
arma::mat dnbinom_sparse(arma::sp_mat& x, arma::mat& mu, int& size_dnb);
RcppExport SEXP _MLEcell_dnbinom_sparse(SEXP xSEXP, SEXP muSEXP, SEXP size_dnbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::sp_mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int& >::type size_dnb(size_dnbSEXP);
    rcpp_result_gen = Rcpp::wrap(dnbinom_sparse(x, mu, size_dnb));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MLEcell_dnbinom_sparse", (DL_FUNC) &_MLEcell_dnbinom_sparse, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_MLEcell(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
